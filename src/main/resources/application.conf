akka {
  license-key: ${?AKKA_LICENSE_KEY}
  stream.materializer.subscription-timeout.timeout = 300s

  http {
    client {
      connecting-timeout = 30s
    }
    server {
      idle-timeout = 300s
      http2.server-side-keep-alive = on
      parsing.max-content-length = 512m
    }
    parsing {
      max-buffer-size = 1m
      max-content-length = 500m
      max-to-strict-bytes = 500m
    }
  }
}

env = prod

enabled-ports = ""
enabled-ports = ${?ENABLED_PORTS}

s3 {
  credentials {
    access_key_id = ${?AWS_ACCESS_KEY_ID}
    secret_key = ${?AWS_SECRET_ACCESS_KEY}
  }
  bucket-name = ${?AWS_S3_BUCKET}
}

exports {
  s3-folder-prefix = ""
  s3-folder-prefix = ${?EXPORTS_BUCKET_FOLDER_PREFIX}
}

feature-guides {
  s3-folder-prefix = "test-training"
  s3-folder-prefix = ${?FEATURE_GUIDE_BUCKET_PREFIX_FOLDER}
}

dashboard {
  notifications {
    gov-notify-api-key = ${GOV_NOTIFY_API_KEY}
    access-request-emails = ${ACCESS_REQUEST_EMAIL}
  }

  team-email: ${TEAM_EMAIL}

  routes {
    # If ask takes more time than this to complete the request is failed
    ask-timeout = 5s
  }
}

server {
  host = "0.0.0.0"
  host = ${?SERVER_HOST}

  port = 8081
  port = ${?SERVER_PORT}
}

cirium {
  data-uri = ""
  data-uri = ${?CIRIUM_DATA_URI}
}

drt {
  domain = ${DRT_DOMAIN}

  use-https = true
  use-https = ${?USE_HTTPS}
}

slick-postgres {
  connectionPool = "HikariCP"
  driver = "org.postgresql.Driver"
  host = "localhost"
  host = ${?AGGDB_HOST}
  numThreads = 4
  maxConnections = 4
  user = "drt"
  user = ${?AGGDB_USER}
  password = "drt"
  password = ${?AGGDB_PASSWORD}
  database = "aggregated"
  database = ${?AGGDB_DB}
  use-pg-ssl = "true"
  use-pg-ssl = ${?USE_PG_SSL}
  use-pg-ssl-mode = "verify-full"
  use-pg-ssl-mode = ${?USE_PG_SSL_MODE}
  url = "jdbc:postgresql://"${slick-postgres.host}":5432/"${slick-postgres.database}"?reWriteBatchedInserts=true&ssl="${slick-postgres.use-pg-ssl}"&sslmode="${slick-postgres.use-pg-ssl-mode}
}

key-cloak {
  url: ${?KEY_CLOAK_API_URL}
  token_url: ${?KEY_CLOAK_TOKEN_URL}
  client_id: ${?KEY_CLOAK_CLIENT_ID}
  client_secret: ${?KEY_CLOAK_CLIENT_SECRET}
  username: ${?KEY_CLOAK_USERNAME}
  password: ${?KEY_CLOAK_PASSWORD}
}

user-tracking {
  feature-flag = true
  feature-flag = ${?USER_TRACKING_FEATURE_FLAG}
  schedule-frequency-minutes = 60
  schedule-frequency-minutes = ${?USER_TRACKING_SCHEDULE_FREQUENCY_MINUTES}
  inactivity-days = 60
  inactivity-days = ${?USER_TRACKING_INACTIVITY_DAYS}
  deactivate-after-warning-days = 7
  deactivate-after-warning-days = ${?USER_TRACKING_DEACTIVATE_AFTER_WARNING_DAYS}
}

drop-in-registration {
  schedule-frequency-minutes = 180
  schedule-frequency-minutes = ${?DROP_IN_REGISTRATION_SCHEDULE_FREQUENCY_MINUTES}
}

drop-in-notification {
  schedule-frequency-minutes = 180
  schedule-frequency-minutes = ${?DROP_IN_NOTIFICATIONS_SCHEDULE_FREQUENCY_MINUTES}
}

health-checks {
  frequency-minutes = 1
  frequency-minutes = ${?HEALTH_CHECKS_FREQUENCY_MINUTES}
  slack.webhook-url = ${?SLACK_WEBHOOK_URL}
}

